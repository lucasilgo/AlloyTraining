@using AlloyTraining.Models.Pages
@using AlloyTraining.Models.ViewModels
@using AlloyTraining.Business.ExtensionMethods

@inject IContextModeResolver modeResolver

@model IPageViewModel<SitePageData>

@{
    HelperResult ItemTemplate(HtmlHelpers.MenuItem item)
    {
        <li class="nav-item">
            @Html.PageLink(item.Page, null, new { @class = "nav-link" + (item.Selected ? "active" : null) })
        </li>
        return new HelperResult(w => Task.CompletedTask);
    }
}

<div class="alloyMenu">
    <div class="navbar">
        <div class="navbar-inner">
            <div class="container">
                <a class="btn btn-navbar" data-toggle="collapse" data-traget=".nav-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </a>
                <div class="nav-collapse">
                    <ul class="nav">
                        <li class="@(Model.CurrentPage.ContentLink.CompareToIgnoreWorkID(ContentReference.StartPage) ? "active" : null)">
                            @Html.ContentLink(ContentReference.StartPage)
                        </li>
                        @Html.MenuList(ContentReference.StartPage, ItemTemplate)
                        <li>
                            @if (User.Identity.IsAuthenticated)
                            {
                                <a href="logout">Log out @User.Identity.Name</a>
                            }
                            else
                            {
                                <a href="/util/login?ReturnUrl=@Model.CurrentPage.PageLink.ExternalURLFromReference()">Log in</a>
                            }
                        </li>
                    </ul>
                    <div class="navbar-search pull-right">
                        @if (Model.StartPage != null)
                        {
                            if (PageReference.IsNullOrEmpty(Model.StartPage.SearchPageLink))
                            {
                                if (modeResolver.CurrentMode == ContextMode.Edit)
                                {
                                    <div class="alert alert-danger">
                                        To enable search across the site, set the SearchPageLink property.
                                    </div>
                                }
                            }
                            else
                            {
                                <form action="@Model.StartPage.SearchPageLink.ExternalURLFromReference()"
                                    method="get">
                                    <input type="text" class="search-query" name="q" id="SearchKeywords" placeholder="Search" />
                                    <input type="submit" class="searchButton" id="SearchButton" value="" />
                                </form>
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
